{"id":"cnd-fallback","createTime":"2017-11-21T14:04:36.482Z","html":"<p>#cnd fallback</p>\n<p>在开发过程中经常会用到一些静态资源(js/css/etc..),但在production环境往往会用cdn的\n方式去加载。然而由于网络等原因，加载cdn资源可能会出现比较慢甚至加载不了,这时就需要加载\n本地的资源啦。引出来的问题就是：到底啥时候用cdn，啥时候用本地？</p>\n<p>这个问题是好几个月前碰到的，当时学习了一些关于cdn fallback的资料，好像是通过设置timeout,\n在设定的时间里给定的资源还访问不到就fallback，有兴趣的可以google下，这里就不贴exampole啦。\n但是看了这些感觉还是没能解决我的问题，看上去是那么回事，但是总感觉少了点什么。后来一想，是不是可以\n那想要请求的资源做个测试，测试的目的主要看哪个资源更快。比如cdnjs/bootcdn/本地同时请求jquery,\n谁先response用哪个！ 于是乎采用了这种解决方案。（大家有更好的解决方案的话可以分享给我呀，谢啦~)</p>\n<pre>\n  // example\n  const testList = [['url','cnd'],['url','local']]\n  testList.forEach(function (item) {\n  \t loadAssetsWithIframe(item[1], item[0]);\n  \n  });\n  \t\t\n  var loadAssetsWithIframe = function (src, type) {\n    // 用iframe test\n     if (!testIframe) {\n      testIframe = document.createElement('iframe');\n      testIframe.width = testIframe.height = 0;\n      testIframe.style.display = 'none';\n      testIframe.src = '';\n      testIframe.id = 'testPerformanceIframe';\n      document.body.appendChild(testIframe);\n     }\n     var ele = document.createElement('script');\n     ele.setAttribute('type', 'text/javascript');\n     ele.setAttribute('src', src);\n     ele.onload = function () {\n     \tif (!bestSrc) {\n     \t\tbestSrc = type;\n     \t\tvar testFinished = new Date();\n     \t\tfilesDict.loadedResult.push(testStart, testFinished, testFinished - testStart);\n     \t}\n     };\n     var iframeBody = testIframe.contentWindow.document.body;\n     iframeBody.appendChild(ele);\t\t\t\n   }\n</pre>\n<p>这段代码会确定一个bestSrc，在外部可以setInterval去看是否已经确定了bestSrc，根据这个bestSrc\n来确定加载的路径。（不要忘记remove testIframe哦）。</p>\n"}