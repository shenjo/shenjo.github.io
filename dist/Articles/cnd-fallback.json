{"id":"cnd-fallback","createTime":"2017-11-22T06:34:08.224Z","html":"<p>#cnd fallback</p>\n<p>在开发过程中经常会用到一些静态资源(js/css/etc..),但在production环境往往会用cdn的方式去加载。然而由于网络等原因，加载cdn资源可能会出现比较慢甚至加载不了,这时就需要加载本地的资源啦。引出来的问题就是：到底啥时候用cdn，啥时候用本地？这个问题是好几个月前碰到的，当时学习了一些关于cdn fallback的资料，好像是通过设置timeout,</p>\n<p>在设定的时间里给定的资源还访问不到就fallback，有兴趣的可以google下，这里就不贴exampole啦。但是看了这些感觉还是没能解决我的问题，看上去是那么回事，但是总感觉少了点什么。后来一想，是不是可以那想要请求的资源做个测试，测试的目的主要看哪个资源更快。比如cdnjs/bootcdn/本地同时请求jquery,谁先response用哪个！ 于是乎采用了这种解决方案。</p>\n<p>（大家有更好的解决方案的话可以分享给我呀，谢啦~)</p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-comment\">// example</span>\n  <span class=\"hljs-keyword\">const</span> testList = [[<span class=\"hljs-string\">'url'</span>,<span class=\"hljs-string\">'cnd'</span>],[<span class=\"hljs-string\">'url'</span>,<span class=\"hljs-string\">'local'</span>]]\n  testList.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">item</span>) </span>{\n  \t loadAssetsWithIframe(item[<span class=\"hljs-number\">1</span>], item[<span class=\"hljs-number\">0</span>]);\n  \n  });\n  \t\t\n  <span class=\"hljs-keyword\">var</span> loadAssetsWithIframe = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">src, type</span>) </span>{\n    <span class=\"hljs-comment\">// 用iframe test</span>\n     <span class=\"hljs-keyword\">if</span> (!testIframe) {\n      testIframe = <span class=\"hljs-built_in\">document</span>.createElement(<span class=\"hljs-string\">'iframe'</span>);\n      testIframe.width = testIframe.height = <span class=\"hljs-number\">0</span>;\n      testIframe.style.display = <span class=\"hljs-string\">'none'</span>;\n      testIframe.src = <span class=\"hljs-string\">''</span>;\n      testIframe.id = <span class=\"hljs-string\">'testPerformanceIframe'</span>;\n      <span class=\"hljs-built_in\">document</span>.body.appendChild(testIframe);\n     }\n     <span class=\"hljs-keyword\">var</span> ele = <span class=\"hljs-built_in\">document</span>.createElement(<span class=\"hljs-string\">'script'</span>);\n     ele.setAttribute(<span class=\"hljs-string\">'type'</span>, <span class=\"hljs-string\">'text/javascript'</span>);\n     ele.setAttribute(<span class=\"hljs-string\">'src'</span>, src);\n     ele.onload = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n     \t<span class=\"hljs-keyword\">if</span> (!bestSrc) {\n     \t\tbestSrc = type;\n     \t\t<span class=\"hljs-keyword\">var</span> testFinished = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>();\n     \t\tfilesDict.loadedResult.push(testStart, testFinished, testFinished - testStart);\n     \t}\n     };\n     <span class=\"hljs-keyword\">var</span> iframeBody = testIframe.contentWindow.document.body;\n     iframeBody.appendChild(ele);\t\t\t\n   }\n</code></pre>\n<p>这段代码会确定一个bestSrc，在外部可以setInterval去看是否已经确定了bestSrc，根据这个bestSrc来确定加载的路径。（不要忘记remove testIframe哦）。</p>\n"}